<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Display a map</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script type="text/javascript" src="./assets/js/jquery-3.2.1.min.js"></script>
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.1/mapbox-gl.js'></script>
     <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.1/mapbox-gl.css' rel='stylesheet' />
     <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.1.1/mapbox-gl-geocoder.min.js'></script>
     <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.1.1/mapbox-gl-geocoder.css' type='text/css' />
    <div id='map'></div>
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100vw; height: 100vh; }
        .mapboxgl-ctrl-geocoder {
            width: 100vw;
            z-index: 1;
            border-radius: 0px;
        }
    </style>
    <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiYWxpa2l5YW55IiwiYSI6ImNqZW43Mm9wYzBmOW8yd3BiZHMzcm9kcG4ifQ.dOhD9h204eeqVa-dLMqRxQ';
    var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/dark-v9',
    center: [-2, 55], // starting position
    zoom: 5, // starting zoom
    // bearing: -30,
    pitch: 90,
    });
    var geocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken
    });

    map.addControl(geocoder);

    // After the map style has loaded on the page, add a source layer and default
    // styling for a single point.
    map.on('load', function() {
        map.addSource('single-point', {
            "type": "geojson",
            "data": {
                "type": "FeatureCollection",
                "features": []
            }
        });

        map.addLayer({
            "id": "point",
            "source": "single-point",
            "type": "circle",
            "paint": {
                "circle-radius": 5,
                "circle-color": "#007cbf"
            }
        });

        // Listen for the `geocoder.input` event that is triggered when a user
        // makes a selection and add a symbol that matches the result.
        geocoder.on('result', function(ev) {
            map.getSource('single-point').setData(ev.result.geometry);
        });


        map.addLayer({
           'id': 'population',
           'type': 'circle',
           'source': {
               type: 'vector',
               url: 'mapbox://examples.8fgz4egr'
           },
           'source-layer': 'sf2010',
           'paint': {
               // make circles larger as the user zooms from z12 to z22
               'circle-radius': {
                   'base': 1.75,
                   'stops': [[12, 2], [22, 180]]
               },
               // color circles by ethnicity, using a match expression
               // https://www.mapbox.com/mapbox-gl-js/style-spec/#expressions-match
               'circle-color': [
                   'match',
                   ['get', 'ethnicity'],
                   'White', '#fbb03b',
                   'Black', '#223b53',
                   'Hispanic', '#e55e5e',
                   'Asian', '#3bb2d0',
                   /* other */ '#ccc'
               ]
           }
       });
       $.getJSON("./coordinate.php", function(data){
         var lon = [];
         var lat = [];
         var city = [];
         var numOfCompany = [];
         for (var i=0; i<data.length; i++) {
          lon.push(data[i]['long']);
         }
         for (var j=0; j<data.length; j++) {
          lat.push(data[j]['lat']);
         }
         for (var k=0; k<data.length; k++) {
          city.push(data[k]['city']);
         }
         for (var z=0; z<data.length; z++) {
          numOfCompany.push(data[z]['numOfCompany']);
         }

         var iii = {
              "type": "FeatureCollection",
              "features": [{
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": [-0.118092, 51.509865]
                  },
                  "properties": {
                      "title": "London",
                      "icon": "monument",
                      "numOfCompany": 1000
                  }
              }, {
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": [-2.244644,53.483959]
                  },
                  "properties": {
                      "title": "Manchester",
                      "icon": "harbor",
                          "numOfCompany": numOfCompany[0]
                  }
              }, {
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": [lon[1], lat[1]]
                  },
                  "properties": {
                      "title": "Liverpool",
                      "icon": "monument",
                          "numOfCompany": numOfCompany[1]
                  }
              }, {
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": [-2.290126, 53.487523]
                  },
                  "properties": {
                      "title": "London",
                      "icon": "monument",
                          "numOfCompany": numOfCompany[2]
                  }
              }]
          }


        map.addLayer({
            "id": "points",
            "source": {
                "type": "geojson",
                "data": iii
            },
            "type": "circle",
            "paint": {
                "circle-radius": ["*",4, ["log10", ["get", "numOfCompany"]] ],
                "circle-color": {
                    "property": "numOfCompany",
                    "stops": [
                        // "temperature" is 0   -> circle color will be blue
                        [50, 'blue'],
                        // "temperature" is 100 -> circle color will be red
                        [100, 'red']
                    ]
                }
            }

        });









        });


    });




    </script>
</body>
</html>
